"use strict";(self.webpackChunkdomino_docs=self.webpackChunkdomino_docs||[]).push([[296],{3905:(e,o,n)=>{n.d(o,{Zo:()=>p,kt:()=>f});var t=n(7294);function r(e,o,n){return o in e?Object.defineProperty(e,o,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[o]=n,e}function i(e,o){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);o&&(t=t.filter((function(o){return Object.getOwnPropertyDescriptor(e,o).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var o=1;o<arguments.length;o++){var n=null!=arguments[o]?arguments[o]:{};o%2?i(Object(n),!0).forEach((function(o){r(e,o,n[o])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(o){Object.defineProperty(e,o,Object.getOwnPropertyDescriptor(n,o))}))}return e}function s(e,o){if(null==e)return{};var n,t,r=function(e,o){if(null==e)return{};var n,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],o.indexOf(n)>=0||(r[n]=e[n]);return r}(e,o);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],o.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=t.createContext({}),l=function(e){var o=t.useContext(c),n=o;return e&&(n="function"==typeof e?e(o):a(a({},o),e)),n},p=function(e){var o=l(e.components);return t.createElement(c.Provider,{value:o},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var o=e.children;return t.createElement(t.Fragment,{},o)}},u=t.forwardRef((function(e,o){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(n),u=r,f=m["".concat(c,".").concat(u)]||m[u]||d[u]||i;return n?t.createElement(f,a(a({ref:o},p),{},{components:n})):t.createElement(f,a({ref:o},p))}));function f(e,o){var n=arguments,r=o&&o.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=u;var s={};for(var c in o)hasOwnProperty.call(o,c)&&(s[c]=o[c]);s.originalType=e,s[m]="string"==typeof e?e:r,a[1]=s;for(var l=2;l<i;l++)a[l]=n[l];return t.createElement.apply(null,a)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5841:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var t=n(7462),r=(n(7294),n(3905));const i={sidebar_position:4},a="Domino Python package",s={unversionedId:"domino_components/domino_components_python_package",id:"domino_components/domino_components_python_package",title:"Domino Python package",description:"Pip installable Python package for the Domino API.",source:"@site/docs/domino_components/domino_components_python_package.md",sourceDirName:"domino_components",slug:"/domino_components/domino_components_python_package",permalink:"/domino-docs/docs/domino_components/domino_components_python_package",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Domino database",permalink:"/domino-docs/docs/domino_components/domino_components_database"}},c={},l=[{value:"Task (Domino class)",id:"task-domino-class",level:2},{value:"DominoKubernetesPodOperator (Domino class)",id:"dominokubernetespodoperator-domino-class",level:2},{value:"BasePiece (Domino class)",id:"basepiece-domino-class",level:2},{value:"CLI",id:"cli",level:2}],p={toc:l},m="wrapper";function d(e){let{components:o,...n}=e;return(0,r.kt)(m,(0,t.Z)({},p,n,{components:o,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"domino-python-package"},"Domino Python package"),(0,r.kt)("p",null,"Pip installable Python package for the Domino API."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"pip install domino-py\n")),(0,r.kt)("p",null,"The Domino python package brings a collection of convenience classes and functions to work with Domino. See more at ",(0,r.kt)("inlineCode",{parentName:"p"},"API documentation <https://docs>"),"_."),(0,r.kt)("h2",{id:"task-domino-class"},"Task (Domino class)"),(0,r.kt)("p",null,"This class defines the objects for each task in the AirfLow dag. Once instantiated it will return either a ",(0,r.kt)("inlineCode",{parentName:"p"},"DominoKubernetesPodOperator")," or a ",(0,r.kt)("inlineCode",{parentName:"p"},"DominoDockerOperator")," object, properly configured with the target Piece arguments, secrets and volume mounts."),(0,r.kt)("h2",{id:"dominokubernetespodoperator-domino-class"},"DominoKubernetesPodOperator (Domino class)"),(0,r.kt)("p",null,"This class is an extension of the Airflow's ",(0,r.kt)("inlineCode",{parentName:"p"},"KubernetesPodOperator")," class. It adds Domino specific functionalities and information. Runtime information is passed as ENV variables to the container running the target Piece."),(0,r.kt)("h2",{id:"basepiece-domino-class"},"BasePiece (Domino class)"),(0,r.kt)("p",null,"This is the base class from which every custom Domino Piece should inherit from. It defines the common attributes and methods for all the Domino Pieces."),(0,r.kt)("h2",{id:"cli"},"CLI"),(0,r.kt)("p",null,"The Domino command line interface helps users to set up and run a local Domino platform, as well as organize and validate their Domino Piece repositories."))}d.isMDXComponent=!0}}]);
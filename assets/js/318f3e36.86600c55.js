"use strict";(self.webpackChunkdomino_docs=self.webpackChunkdomino_docs||[]).push([[6310],{5680:(e,i,n)=>{n.d(i,{xA:()=>c,yg:()=>u});var t=n(6540);function o(e,i,n){return i in e?Object.defineProperty(e,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[i]=n,e}function r(e,i){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);i&&(t=t.filter((function(i){return Object.getOwnPropertyDescriptor(e,i).enumerable}))),n.push.apply(n,t)}return n}function a(e){for(var i=1;i<arguments.length;i++){var n=null!=arguments[i]?arguments[i]:{};i%2?r(Object(n),!0).forEach((function(i){o(e,i,n[i])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(n,i))}))}return e}function s(e,i){if(null==e)return{};var n,t,o=function(e,i){if(null==e)return{};var n,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)n=r[t],i.indexOf(n)>=0||(o[n]=e[n]);return o}(e,i);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)n=r[t],i.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=t.createContext({}),p=function(e){var i=t.useContext(l),n=i;return e&&(n="function"==typeof e?e(i):a(a({},i),e)),n},c=function(e){var i=p(e.components);return t.createElement(l.Provider,{value:i},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var i=e.children;return t.createElement(t.Fragment,{},i)}},y=t.forwardRef((function(e,i){var n=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),y=o,u=d["".concat(l,".").concat(y)]||d[y]||m[y]||r;return n?t.createElement(u,a(a({ref:i},c),{},{components:n})):t.createElement(u,a({ref:i},c))}));function u(e,i){var n=arguments,o=i&&i.mdxType;if("string"==typeof e||o){var r=n.length,a=new Array(r);a[0]=y;var s={};for(var l in i)hasOwnProperty.call(i,l)&&(s[l]=i[l]);s.originalType=e,s[d]="string"==typeof e?e:o,a[1]=s;for(var p=2;p<r;p++)a[p]=n[p];return t.createElement.apply(null,a)}return t.createElement.apply(null,n)}y.displayName="MDXCreateElement"},2444:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var t=n(8168),o=(n(6540),n(5680));const r={sidebar_position:2},a="Pieces repository",s={unversionedId:"pieces/pieces_repository",id:"pieces/pieces_repository",title:"Pieces repository",description:"The easiest way to start your Pieces repository is to use our Template for Pieces repository.",source:"@site/docs/pieces/pieces_repository.md",sourceDirName:"pieces",slug:"/pieces/pieces_repository",permalink:"/domino-docs/docs/pieces/pieces_repository",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Pieces",permalink:"/domino-docs/docs/pieces/"},next:{title:"Create Pieces",permalink:"/domino-docs/docs/pieces/create_pieces"}},l={},p=[{value:"Piece Folder",id:"piece-folder",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"config.toml",id:"configtoml",level:2},{value:"Github actions",id:"github-actions",level:2}],c={toc:p},d="wrapper";function m(e){let{components:i,...r}=e;return(0,o.yg)(d,(0,t.A)({},c,r,{components:i,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"pieces-repository"},"Pieces repository"),(0,o.yg)("admonition",{type:"tip"},(0,o.yg)("p",{parentName:"admonition"},"The easiest way to start your Pieces repository is to use our ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/Tauffer-Consulting/domino_pieces_repository_template"},"Template for Pieces repository"),".\nYou can either clone it using git or use our CLI command ",(0,o.yg)("inlineCode",{parentName:"p"},"domino pieces create"),".")),(0,o.yg)("p",null,"A Pieces repository is a git repository that contains multiple Pieces available to be used in Domino Workflows. A Domino Pieces repository should contain:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"a ",(0,o.yg)("inlineCode",{parentName:"li"},"pieces/")," folder containing all ",(0,o.yg)("a",{parentName:"li",href:"./pieces_repository#piece-folder"},"Pieces")," folders"),(0,o.yg)("li",{parentName:"ul"},"a ",(0,o.yg)("a",{parentName:"li",href:"./pieces_repository#dependencies"},"dependencies/")," folder with all ",(0,o.yg)("inlineCode",{parentName:"li"},"Dockerfile")," and ",(0,o.yg)("inlineCode",{parentName:"li"},"requirements.txt")," files defined as Pieces dependencies"),(0,o.yg)("li",{parentName:"ul"},"a ",(0,o.yg)("a",{parentName:"li",href:"./pieces_repository#configtoml"},"config.toml")," configuration file"),(0,o.yg)("li",{parentName:"ul"},"a ",(0,o.yg)("inlineCode",{parentName:"li"},".domino/")," folder containing the ",(0,o.yg)("inlineCode",{parentName:"li"},"dependencies_map.json")," and ",(0,o.yg)("inlineCode",{parentName:"li"},"compiled_metadata.json")," files, which are automatically generated by the ",(0,o.yg)("a",{parentName:"li",href:"./pieces_repository#github-actions"},"Github"))),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="Repository folders and files structure"',title:'"Repository',folders:!0,and:!0,files:!0,'structure"':!0},"dependencies/\n\u251c\u2500\u2500 Dockerfile_2\n\u2514\u2500\u2500 requirements_1.txt\npieces/\n\u2514\u2500\u2500 FirstPiece/\n    \u251c\u2500\u2500 metadata.json\n    \u251c\u2500\u2500 models.py\n    \u251c\u2500\u2500 piece.py\n    \u2514\u2500\u2500 test_firstpiece.py\n\u2514\u2500\u2500 SecondPiece/\n    \u251c\u2500\u2500 metadata.json\n    \u251c\u2500\u2500 models.py\n    \u251c\u2500\u2500 piece.py\n    \u2514\u2500\u2500 test_secondpiece.py\nconfig.toml\n")),(0,o.yg)("h2",{id:"piece-folder"},"Piece Folder"),(0,o.yg)("p",null,"The ",(0,o.yg)("inlineCode",{parentName:"p"},"pieces/")," folder should contain all the Pieces in the repository. Each Piece folder name should have the sufix ",(0,o.yg)("inlineCode",{parentName:"p"},"Piece")," and follow a standard organization and contain certain information to be able to be found and used by your deployed Domino instance. Example:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="Piece folder example"',title:'"Piece',folder:!0,'example"':!0},"pieces/\n\u2514\u2500\u2500 FirstPiece/\n    \u251c\u2500\u2500 metadata.json\n    \u251c\u2500\u2500 models.py\n    \u2514\u2500\u2500 piece.py\n")),(0,o.yg)("p",null,"For detailed information on how to create a Piece, see ",(0,o.yg)("a",{parentName:"p",href:"./create_pieces"},"Create Pieces"),"."),(0,o.yg)("h2",{id:"dependencies"},"Dependencies"),(0,o.yg)("p",null,"The ",(0,o.yg)("inlineCode",{parentName:"p"},"/dependencies")," folder should contain all the ",(0,o.yg)("inlineCode",{parentName:"p"},"requirements.txt")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"Dockerfile")," files that were defined as dependencies in the ",(0,o.yg)("inlineCode",{parentName:"p"},"metadata.json")," files of the Pieces in this repository. Example:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash",metastring:'title="Dependencies folder example"',title:'"Dependencies',folder:!0,'example"':!0},"dependencies/\n\u251c\u2500\u2500 Dockerfile_1\n\u251c\u2500\u2500 requirements_1.txt\n\u2514\u2500\u2500 requirements_2.txt\n")),(0,o.yg)("h2",{id:"configtoml"},"config.toml"),(0,o.yg)("p",null,"The ",(0,o.yg)("inlineCode",{parentName:"p"},"config.toml")," file stores the configuration variables for the repository. Example:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-toml",metastring:'title="Repository\'s configuration file"',title:"\"Repository's",configuration:!0,'file"':!0},'[repository]\n# The name of the github owner, must be in lower-case letters\nREGISTRY_NAME = "github_owner_name"\n\n# The name of this Pieces repository\nREPOSITORY_NAME = "example_pieces"\n\n# The label of this Pieces repository, as it will appear in Domino GUI\nREPOSITORY_LABEL = "OpenAI Domino Pieces"\n\n# The version of this Pieces release\nVERSION = "0.1.0"\n')),(0,o.yg)("h2",{id:"github-actions"},"Github actions"),(0,o.yg)("p",null,"Our ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/Tauffer-Consulting/domino_pieces_repository_template"},"Template for Pieces repository")," provides out-of-the box Github actions to validate, organize and publish your Pieces images.\nWhenever the ",(0,o.yg)("inlineCode",{parentName:"p"},"config.toml")," file of a pieces repository is updated, the actions will run and some files will be automatically created or modified inside the repository's ",(0,o.yg)("inlineCode",{parentName:"p"},"/.domino")," folder:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"A ",(0,o.yg)("inlineCode",{parentName:"li"},"dependencies_map.json")," file"),(0,o.yg)("li",{parentName:"ul"},"A ",(0,o.yg)("inlineCode",{parentName:"li"},"compiled_metadata.json")," file")),(0,o.yg)("p",null,"Besides that, the actions will also create the following artifacts within the repository:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"A ",(0,o.yg)("inlineCode",{parentName:"li"},"VERSION.tar.gz")," file will be created as a release asset"),(0,o.yg)("li",{parentName:"ul"},"Docker images will be built and published to the repository's container registry (in Github this is named Packages). One image will be created for each dependency group, as defined in ",(0,o.yg)("inlineCode",{parentName:"li"},".domino/dependencies_map.json")," file.")),(0,o.yg)("admonition",{type:"info"},(0,o.yg)("p",{parentName:"admonition"},"For the actions to run successfully, make sure that under your repository ",(0,o.yg)("inlineCode",{parentName:"p"},"Settings -> Action -> General -> Workflow permissions")," the option ",(0,o.yg)("inlineCode",{parentName:"p"},"Read and write permissions")," is selected.")),(0,o.yg)("admonition",{type:"info"},(0,o.yg)("p",{parentName:"admonition"},"The actions are triggered only when the ",(0,o.yg)("inlineCode",{parentName:"p"},"config.toml")," file is updated.")),(0,o.yg)("p",null,(0,o.yg)("img",{alt:"Piece repository action",src:n(5924).A,width:"1380",height:"916"})))}m.isMDXComponent=!0},5924:(e,i,n)=>{n.d(i,{A:()=>t});const t=n.p+"assets/images/pieces_repository_slide_2-bb694a516527318bbe4db0e0071fb4d8.png"}}]);